(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{410:function(t,a,s){"use strict";s.r(a);var n=s(42),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"串-sequence"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#串-sequence"}},[t._v("#")]),t._v(" 串（Sequence）")]),t._v(" "),s("h2",{attrs:{id:"串-sequence-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#串-sequence-2"}},[t._v("#")]),t._v(" 串（Sequence）")]),t._v(" "),s("p",[t._v("本课程研究的串是开发中非常熟悉的字符串，是由若干个字符组成的有限序列")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201019083717219.png",alt:"image-20201019083717219"}})]),t._v(" "),s("p",[t._v("字符串 thank 的前缀（prefix）、真前缀（proper prefix）、后缀（suffix）、真后缀（proper suffix）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201019083802166.png",alt:"image-20201019083802166"}})]),t._v(" "),s("h2",{attrs:{id:"串匹配算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#串匹配算法"}},[t._v("#")]),t._v(" 串匹配算法")]),t._v(" "),s("p",[t._v("本课程主要研究串的匹配问题，比如")]),t._v(" "),s("ul",[s("li",[t._v("查找一个模式串（pattern）在文本串（text）中的位置")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201019083902921.png",alt:"image-20201019083902921"}})]),t._v(" "),s("p",[t._v("几个经典的串匹配算法")]),t._v(" "),s("ul",[s("li",[t._v("蛮力（Brute Force）")]),t._v(" "),s("li",[t._v("KMP")]),t._v(" "),s("li",[t._v("Boyer-Moore")]),t._v(" "),s("li",[t._v("Karp-Rabin")]),t._v(" "),s("li",[t._v("Sunday")])]),t._v(" "),s("p",[t._v("本课程用 tlen 代表文本串 text 的长度，plen 代表模式串 pattern 的长度")]),t._v(" "),s("h2",{attrs:{id:"蛮力-brute-force"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蛮力-brute-force"}},[t._v("#")]),t._v(" 蛮力（Brute Force）")]),t._v(" "),s("p",[t._v("以字符为单位，从左到右移动模式串，直到匹配成功")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201019084123763.png",alt:"image-20201019084123763"}})]),t._v(" "),s("p",[t._v("蛮力算法有 2 种常见实现思路")]),t._v(" "),s("h3",{attrs:{id:"蛮力1-执行过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蛮力1-执行过程"}},[t._v("#")]),t._v(" 蛮力1 – 执行过程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201019084335763.png",alt:"image-20201019084335763"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201019084746293.png",alt:"image-20201019084746293"}})]),t._v(" "),s("h3",{attrs:{id:"蛮力1-实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蛮力1-实现"}},[t._v("#")]),t._v(" 蛮力1 – 实现")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tChars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" pChars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当ti和pi都未到达字符串尾部,那么字符串匹配还未完成")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" tChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            pi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//下一次比较时ti的起始位置, ti-pi: 本次比较中ti的起始位置")]),t._v("\n            pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"蛮力1-优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蛮力1-优化"}},[t._v("#")]),t._v(" 蛮力1 – 优化")]),t._v(" "),s("p",[t._v("此前实现的蛮力算法，在恰当的时候可以提前退出，减少比较次数")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201019085750398.png",alt:"image-20201019085750398"}})]),t._v(" "),s("p",[t._v("因此，ti 的退出条件可以从 ti < tlen 改为")]),t._v(" "),s("ul",[s("li",[t._v("ti – pi <= tlen – plen")]),t._v(" "),s("li",[t._v("ti – pi 是指每一轮比较中 text 首个比较字符的位置")])]),t._v(" "),s("h3",{attrs:{id:"蛮力1-优化实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蛮力1-优化实现"}},[t._v("#")]),t._v(" 蛮力1 – 优化实现")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf1_1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tChars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" pChars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" tmax "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tlen"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当ti和pi都未到达字符串尾部,那么字符串匹配还未完成")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" tmax "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" tChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            pi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"蛮力2-执行过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蛮力2-执行过程"}},[t._v("#")]),t._v(" 蛮力2 – 执行过程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201019090543338.png",alt:"image-20201019090543338"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020084333374.png",alt:"image-20201020084333374"}})]),t._v(" "),s("h3",{attrs:{id:"蛮力2-实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蛮力2-实现"}},[t._v("#")]),t._v(" 蛮力2 – 实现")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tChars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" pChars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tmax "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tlen"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当ti和pi都未到达字符串尾部,那么字符串匹配还未完成")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" tmax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" pi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" pi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"蛮力-性能分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蛮力-性能分析"}},[t._v("#")]),t._v(" 蛮力 – 性能分析")]),t._v(" "),s("p",[t._v("n 是文本串长度，m 是模式串长度")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020084540693.png",alt:"image-20201020084540693"}})]),t._v(" "),s("p",[t._v("最好情况")]),t._v(" "),s("ul",[s("li",[t._v("只需一轮比较就完全匹配成功，比较 m 次（ m 是模式串的长度）")]),t._v(" "),s("li",[t._v("时间复杂度为 O(m)")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020084637861.png",alt:"image-20201020084637861"}})]),t._v(" "),s("p",[t._v("最坏情况（字符集越大，出现概率越低）")]),t._v(" "),s("ul",[s("li",[t._v("执行了 n – m + 1 轮比较（ n 是文本串的长度）")]),t._v(" "),s("li",[t._v("每轮都比较至模式串的末字符后失败（ m – 1 次成功，1 次失败）")]),t._v(" "),s("li",[t._v("时间复杂度为 O(m ∗ (n − m + 1))，由于一般 m 远小于 n，所以为 O(mn)")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020084720870.png",alt:"image-20201020084720870"}})]),t._v(" "),s("h2",{attrs:{id:"kmp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp"}},[t._v("#")]),t._v(" KMP")]),t._v(" "),s("p",[t._v("KMP 是 Knuth–Morris–Pratt 的简称（取名自3位发明人的名字），于1977年发布")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020085348259.png",alt:"image-20201020085348259"}})]),t._v(" "),s("h3",{attrs:{id:"蛮力-vs-kmp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蛮力-vs-kmp"}},[t._v("#")]),t._v(" 蛮力 vs KMP")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020085133627.png",alt:"image-20201020085133627"}})]),t._v(" "),s("p",[t._v("对比蛮力算法，KMP的精妙之处：充分利用了此前比较过的内容，可以很聪明地跳过一些不必要的比较位置")]),t._v(" "),s("h3",{attrs:{id:"kmp-next表的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-next表的使用"}},[t._v("#")]),t._v(" KMP – next表的使用")]),t._v(" "),s("p",[t._v("KMP 会预先根据模式串的内容生成一张 next 表（一般是个数组）"),s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020085546792.png",alt:"image-20201020085546792"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020085714202.png",alt:"image-20201020085714202"}})]),t._v(" "),s("h3",{attrs:{id:"kmp-核心原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-核心原理"}},[t._v("#")]),t._v(" KMP – 核心原理")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020085946970.png",alt:"image-20201020085946970"}})]),t._v(" "),s("p",[t._v("当 d、e 失配时，如果希望 pattern 能够一次性向右移动一大段距离，然后直接比较 d、c 字符")]),t._v(" "),s("ul",[s("li",[t._v("前提条件是 A 必须等于 B")])]),t._v(" "),s("p",[t._v("所以 KMP 必须在失配字符 e 左边的子串中找出符合条件的 A、B，从而得知向右移动的距离")]),t._v(" "),s("p",[t._v("向右移动的距离：e左边子串的长度 – A的长度，等价于：e的索引 – c的索引")]),t._v(" "),s("p",[t._v("且 c的索引 == next[e的索引]，所以向右移动的距离：e的索引 – next[e的索引]")]),t._v(" "),s("p",[t._v("总结")]),t._v(" "),s("ul",[s("li",[t._v("如果在 pi 位置失配，向右移动的距离是 pi – next[pi]，所以 next[pi] 越小，移动距离越大")]),t._v(" "),s("li",[t._v("next[pi] 是 pi 左边子串的真前缀后缀的最大公共子串长度")])]),t._v(" "),s("h3",{attrs:{id:"kmp-真前缀后缀的最大公共子串长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-真前缀后缀的最大公共子串长度"}},[t._v("#")]),t._v(" KMP – 真前缀后缀的最大公共子串长度")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020090922614.png",alt:"image-20201020090922614"}})]),t._v(" "),s("h3",{attrs:{id:"kmp-得到next表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-得到next表"}},[t._v("#")]),t._v(" KMP – 得到next表")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020091007345.png",alt:"image-20201020091007345"}})]),t._v(" "),s("p",[t._v("将最大公共子串长度都向后移动 1 位，首字符设置为 负1，就得到了 next 表")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020091027128.png",alt:"image-20201020091027128"}})]),t._v(" "),s("h3",{attrs:{id:"kmp-负1的精妙之处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-负1的精妙之处"}},[t._v("#")]),t._v(" KMP – 负1的精妙之处")]),t._v(" "),s("p",[t._v("相当于在负1位置有个假想的通配字符（哨兵），匹配成功后 ti++、pi++")]),t._v(" "),s("h3",{attrs:{id:"kmp-主算法实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-主算法实现"}},[t._v("#")]),t._v(" KMP – 主算法实现")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tChars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" pChars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" tlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" imax "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tlen"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当ti和pi都未到达字符串尾部,那么字符串匹配还未完成")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" imax "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" plen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" tChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            pi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" plen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"kmp-为什么是-最大-公共子串长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-为什么是-最大-公共子串长度"}},[t._v("#")]),t._v(" KMP – 为什么是“最大“公共子串长度？")]),t._v(" "),s("p",[t._v("假设文本串是AAAAABCDEF，模式串是AAAAB")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020130609574.png",alt:"image-20201020130609574"}})]),t._v(" "),s("p",[t._v("应该将1、2、3中的哪个值赋值给 pi 是正确的？")]),t._v(" "),s("p",[t._v("将 3 赋值给 pi")]),t._v(" "),s("ul",[s("li",[t._v("向右移动了 1 个字符单位，最后成功匹配")])]),t._v(" "),s("p",[t._v("将 1 赋值给 pi")]),t._v(" "),s("ul",[s("li",[t._v("向右移动了 3 个字符单位，错过了成功匹配的机会")])]),t._v(" "),s("p",[t._v("公共子串长度越小，向右移动的距离越大，越不安全")]),t._v(" "),s("p",[t._v("公共子串长度越大，向右移动的距离越小，越安全")]),t._v(" "),s("h3",{attrs:{id:"kmp-next表的构造思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-next表的构造思路"}},[t._v("#")]),t._v(" KMP – next表的构造思路")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201020131014107.png",alt:"image-20201020131014107"}})]),t._v(" "),s("p",[t._v("已知 next[i] == n\n① 如果 pattern.charAt(i) == pattern.charAt(n)")]),t._v(" "),s("ul",[s("li",[t._v("那么 next[i + 1] == n + 1")])]),t._v(" "),s("p",[t._v("② 如果 pattern.charAt(i) != pattern.charAt(n)")]),t._v(" "),s("ul",[s("li",[t._v("已知 next[n] == k")]),t._v(" "),s("li",[t._v("如果 pattern.charAt(i) == pattern.charAt(k)")]),t._v(" "),s("li",[t._v("✓那么 next[i + 1] == k + 1")]),t._v(" "),s("li",[t._v("如果 pattern.charAt(i) != pattern.charAt(k)")]),t._v(" "),s("li",[t._v("✓将 k 代入 n ，重复执行 ②")])]),t._v(" "),s("h3",{attrs:{id:"kmp-next表的代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-next表的代码实现"}},[t._v("#")]),t._v(" KMP – next表的代码实现")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" imax "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" imax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"kmp-next表的不足之处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-next表的不足之处"}},[t._v("#")]),t._v(" KMP – next表的不足之处")]),t._v(" "),s("p",[t._v("假设文本串是 AAABAAAAB ，模式串是 AAAAB")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021080925312.png",alt:"image-20201021080925312"}})]),t._v(" "),s("p",[t._v("在这种情况下，KMP显得比较笨拙")]),t._v(" "),s("h3",{attrs:{id:"kmp-next表的优化思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-next表的优化思路"}},[t._v("#")]),t._v(" KMP – next表的优化思路")]),t._v(" "),s("p",[t._v("已知：next[i] == n，next[n] == k")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021081106646.png",alt:"image-20201021081106646"}})]),t._v(" "),s("ul",[s("li",[t._v("如果 pattern[i] != d，就让模式串滑动到 next[i]（也就是n）位置跟 d 进行比较")]),t._v(" "),s("li",[t._v("如果 pattern[n] != d，就让模式串滑动到 next[n]（也就是k）位置跟 d 进行比较")]),t._v(" "),s("li",[t._v("如果 pattern[i] == pattern[n]，那么当 i 位置失配时，模式串最终必然会滑到 k 位置跟 d 进行比较")])]),t._v(" "),s("p",[s("strong",[t._v("所以 next[i] 直接存储 next[n]（也就是k）即可")])]),t._v(" "),s("h3",{attrs:{id:"kmp-next表的优化实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-next表的优化实现"}},[t._v("#")]),t._v(" KMP – next表的优化实现")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" imax "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" imax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" pChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"kmp-next表的优化效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-next表的优化效果"}},[t._v("#")]),t._v(" KMP – next表的优化效果")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021081511542.png",alt:"image-20201021081511542"}})]),t._v(" "),s("h3",{attrs:{id:"kmp-性能分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmp-性能分析"}},[t._v("#")]),t._v(" KMP – 性能分析")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021081647543.png",alt:"image-20201021081647543"}})]),t._v(" "),s("p",[s("strong",[t._v("KMP 主逻辑")])]),t._v(" "),s("ul",[s("li",[t._v("最好时间复杂度：O(m)")]),t._v(" "),s("li",[t._v("最坏时间复杂度：O(n)，不超过O(2n)")])]),t._v(" "),s("p",[t._v("next 表的构造过程跟 KMP 主体逻辑类似 ,时间复杂度：O(m)")]),t._v(" "),s("p",[s("strong",[t._v("KMP 整体")])]),t._v(" "),s("ul",[s("li",[t._v("最好时间复杂度：O(m)")]),t._v(" "),s("li",[t._v("最坏时间复杂度：O(n + m)")]),t._v(" "),s("li",[t._v("空间复杂度： O(m)")])]),t._v(" "),s("h2",{attrs:{id:"蛮力-vs-kmp-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蛮力-vs-kmp-2"}},[t._v("#")]),t._v(" 蛮力 vs KMP")]),t._v(" "),s("p",[t._v("蛮力算法为何低效？")]),t._v(" "),s("p",[t._v("当字符失配时")]),t._v(" "),s("p",[t._v("蛮力算法")]),t._v(" "),s("ul",[s("li",[t._v("✓ti 回溯到左边位置")]),t._v(" "),s("li",[t._v("✓pi 回溯到 0")])]),t._v(" "),s("p",[t._v("KMP 算法")]),t._v(" "),s("ul",[s("li",[t._v("✓ti 不必回溯")]),t._v(" "),s("li",[t._v("✓pi 不一定要回溯到 0")])]),t._v(" "),s("h2",{attrs:{id:"bn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bn"}},[t._v("#")]),t._v(" BN")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021083320107.png",alt:"image-20201021083320107"}})]),t._v(" "),s("h3",{attrs:{id:"坏字符-bad-character"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#坏字符-bad-character"}},[t._v("#")]),t._v(" 坏字符（Bad Character）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021083455539.png",alt:"image-20201021083455539"}})]),t._v(" "),s("h3",{attrs:{id:"好后缀-good-suffix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#好后缀-good-suffix"}},[t._v("#")]),t._v(" 好后缀（Good Suffix）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021083618266.png",alt:"image-20201021083618266"}})]),t._v(" "),s("h3",{attrs:{id:"bm的最好情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bm的最好情况"}},[t._v("#")]),t._v(" BM的最好情况")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021083702084.png",alt:"image-20201021083702084"}})]),t._v(" "),s("h3",{attrs:{id:"bm的最坏情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bm的最坏情况"}},[t._v("#")]),t._v(" BM的最坏情况")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021083752988.png",alt:"image-20201021083752988"}})]),t._v(" "),s("h2",{attrs:{id:"rk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rk"}},[t._v("#")]),t._v(" RK")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021083857220.png",alt:"image-20201021083857220"}})]),t._v(" "),s("h2",{attrs:{id:"sunday"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sunday"}},[t._v("#")]),t._v(" Sunday")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/jarrysong/img/raw/master/img/image-20201021083935354.png",alt:"image-20201021083935354"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);