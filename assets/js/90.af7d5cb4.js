(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{435:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),s("h4",{attrs:{id:"_1-队列的含义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-队列的含义"}},[t._v("#")]),t._v(" 1.队列的含义")]),t._v(" "),s("ul",[s("li",[t._v("队列是一种特殊的线性表，只能在头尾两端进行操作")]),t._v(" "),s("li",[t._v("队尾（rear）：只能从队尾添加元素，一般叫做 enQueue，入队")]),t._v(" "),s("li",[t._v("队头（front）：只能从队头移除元素，一般叫做 deQueue，出队")]),t._v(" "),s("li",[t._v("先进先出的原则，First In First Out，FIFO\n队头（front）队尾（ rear）")])]),t._v(" "),s("h4",{attrs:{id:"队列的接口设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列的接口设计"}},[t._v("#")]),t._v(" 队列的接口设计")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 元素的数量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否为空 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清空 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("enQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 入队 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 出队 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("front")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取队列的头元素")]),t._v("\n")])])]),s("ul",[s("li",[t._v("队列的内部实现是否可以直接利用以前学过的数据结构？")]),t._v(" "),s("li",[t._v("动态数组、链表")]),t._v(" "),s("li",[t._v("优先使用双向链表，因为队列主要是往头尾操作元素")])]),t._v(" "),s("h4",{attrs:{id:"队列的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列的实现"}},[t._v("#")]),t._v(" 队列的实现")]),t._v(" "),s("h4",{attrs:{id:"练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[t._v("#")]),t._v(" 练习")]),t._v(" "),s("p",[t._v("https://leetcode-cn.com/problems/implement-queue-using-stacks/")]),t._v(" "),s("ul",[s("li",[t._v("准备2个栈：inStack、outStack")]),t._v(" "),s("li",[t._v("入队时，push 到 inStack 中\n出队时\n"),s("ul",[s("li",[t._v("如果 outStack 为空，将 inStack 所有元素逐一弹出，push 到 outStack，outStack 弹出栈顶元素")]),t._v(" "),s("li",[t._v("如果 outStack 不为空， outStack 弹出栈顶元素")])])])]),t._v(" "),s("p",[t._v("◼ 假设如下操作：11入队、22入队、出队、33入队、出队")]),t._v(" "),s("h4",{attrs:{id:"双端队列-deque"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双端队列-deque"}},[t._v("#")]),t._v(" 双端队列（Deque）")]),t._v(" "),s("ul",[s("li",[t._v("双端队列是能在头尾两端添加、删除的队列")]),t._v(" "),s("li",[t._v("英文 deque 是 double ended queue 的简称\n队头（front）队尾（ rear）")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("int size(); // 元素的数量 \nboolean isEmpty(); // 是否为空 \nvoid clear(); // 清空 \nvoid enQueueRear(E element); // 从队尾入队 \nE deQueueFront(); // 从队头出队 \nvoid enQueueFront(E element); // 从队头入队 \nE deQueueRear(); // 从队尾出队 \nE front(); // 获取队列的头元素 \nE rear(); // 获取队列的尾元素\n")])])]),s("h4",{attrs:{id:"循环队列-circle-queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环队列-circle-queue"}},[t._v("#")]),t._v(" 循环队列（Circle Queue）")]),t._v(" "),s("ul",[s("li",[t._v("其实队列底层也可以使用动态数组实现，并且各项接口也可以优化到 O(1) 的时间复杂度")]),t._v(" "),s("li",[t._v("这个用数组实现并且优化之后的队列也叫做：循环队列")])]),t._v(" "),s("h4",{attrs:{id:"循环双端队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环双端队列"}},[t._v("#")]),t._v(" 循环双端队列")]),t._v(" "),s("p",[t._v("可以进行两端添加、删除操作的循环队列")]),t._v(" "),s("h4",{attrs:{id:"运算符优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符优化"}},[t._v("#")]),t._v(" %运算符优化")]),t._v(" "),s("ul",[s("li",[t._v("尽量避免使用乘*、除/、模%、浮点数运算，效率低下")]),t._v(" "),s("li",[t._v("已知n>=0，m>0 ")]),t._v(" "),s("li",[t._v("%m 等价于 n – (m > n ? 0 : m) 的前提条件：n < 2m")])]),t._v(" "),s("h4",{attrs:{id:"作业"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作业"}},[t._v("#")]),t._v(" 作业")]),t._v(" "),s("p",[t._v("https://leetcode-cn.com/problems/implement-stack-using-queues/")])])}),[],!1,null,null,null);a.default=n.exports}}]);